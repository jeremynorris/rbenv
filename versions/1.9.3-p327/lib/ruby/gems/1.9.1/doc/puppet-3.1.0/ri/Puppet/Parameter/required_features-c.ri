U:RDoc::Attr[iI"required_features:EFI")Puppet::Parameter::required_features;FI"R;F:publico:RDoc::Markup::Document:@parts[o:RDoc::Markup::Paragraph;	[I"`@comment This somewhat odd documentation construct is because the getter and setter are not;To:RDoc::Markup::Verbatim;	[
I"borthogonal; the setter uses varargs and this confuses yard. To overcome the problem both the
;FI"bgetter and the setter are documented here. If this issues is fixed, a todo will be displayed
;FI"Mfor the setter method, and the setter documentation can be moved there.
;FI"cSince the attribute is actually RW it should  perhaps instead just be implemented as a setter
;FI"8and a getter method (and no attr_xxx declaration).
;Fo;
;	[I"'@!attribute [rw] required_features;TI"f@return [Array<Symbol>] The names of the _provider features_ required for this parameter to work.;To;;	[I";the returned names are always all lower case symbols.
;Fo;
;	[I" @overload required_features;To;;	[I"PReturns the required _provider features_ as an array of lower case symbols
;Fo;
;	[I"(@overload required_features=(*args);To;;	[I"L@param *args [Symbol] one or more names of required provider features 
;FI"aSets the required_provider_features_ from one or more values, or array. The given arguments
;FI"&are flattened, and internalized.
;Fo;
;	[I"@api public;TI"@dsl type;T:
@file0TI"lib/puppet/parameter.rb;T